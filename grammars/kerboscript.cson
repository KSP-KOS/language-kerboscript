'scopeName': 'source.ks'
'fileTypes': [
  'ks'
]
'name': 'KerboScript'
'patterns': [
  {
    'include': '#comments'
  }
  {
    'match': '\\.'
    'name': 'punctuation.terminator.ks'
  }
  {
    'match': '<\\=|>\\=|\\=|<|>|<>'
    'name': 'keyword.operator.comparison.ks'
  }
  {
    'match': '\\+|\\-|\\*|\\^|/|%'
    'name': 'keyword.operator.arithmetic.ks'
  }
  {
    'match': '\\b(and|not|or)\\b'
    'name': 'keyword.operator.logical.ks'
  }
  {
    'match': '\\b(function|set|lock|unlock|print|at|on|toggle|off|stage|clearscreen|add|remove|log|declare|switch|copy|from|rename|volume|file|delete|edit|run|compile|list|reboot|shutdown|unset|batch|deploy)\\b'
    'name': 'keyword.control.ks'
  }
  {
    'match': '\\b(if|else|when|then)\\b'
    'name': 'keyword.control.conditional.ks'
  }
  {
    'match': '\\b(break)\\b'
    'name': 'keyword.control.statement.ks'
  }
  {
    'match': '\\b(until|wait|preserve|for|in)\\b'
    'name': 'keyword.control.repeat.ks'
  }
  {
    'match': '\\b(is|to)\\b'
    'name': 'keyword.operator.assignment.ks'
  }
  {
    'match': '\\b(Direction|List|Quaternion|Vector)\\b'
    'name': 'storage.type.ks'
  }
  {
    'match': '\\b(global|local|parameter)\\b'
    'name': 'storage.modifier.ks'
  }
  {
    'match': '\\b(true|false)\\b'
    'name': 'constant.language.ks'
  }
  {
    'match': '\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\b'
    'name': 'constant.numeric.ks'
  }
  {
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.ks'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.ks'
    'name': 'string.quoted.double.ks'
    'patterns': [
      {
        'include': '#string_escaped_char'
      }
    ]
  }
  {
    'begin': '\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.ks'
    'end': '\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.ks'
    'name': 'string.quoted.single.ks'
    'patterns': [
      {
        'include': '#string_escaped_char'
      }
    ]
  }
]
'repository':
  'access':
    'captures':
      '1':
        'name': 'punctuation.separator.variable-access.ks'
      '2':
        'name': 'variable.other.dot-access.ks'
    'match': '(\\:)([a-zA-Z_][a-zA-Z_0-9]*)\\b(?!\\s*\\()'
  'block':
    'patterns': [
      {
        'begin': '\\{'
        'beginCaptures':
          '0':
            'name': 'punctuation.section.block.begin.ks'
        'end': '\\}'
        'endCaptures':
          '0':
            'name': 'punctuation.section.block.end.ks'
        'name': 'meta.block.ks'
        'patterns': [
          {
            'include': '#block_innards'
          }
        ]
      }
    ]
  'block_innards':
    'patterns': [
      {
        'include': '#block'
      }
      {
        'include': '$base'
      }
    ]
  'comments':
    'patterns': [
      {
        'captures':
          '1':
            'name': 'meta.toc-list.banner.line.ks'
        'match': '^// =(\\s*.*?)\\s*=\\s*$\\n?'
        'name': 'comment.line.banner.ks'
      }
      {
        'begin': '(^[ \\t]+)?(?=//)'
        'beginCaptures':
          '1':
            'name': 'punctuation.whitespace.comment.leading.ks'
        'end': '(?!\\G)'
        'patterns': [
          {
            'begin': '//'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.comment.ks'
            'end': '\\n'
            'name': 'comment.line.double-slash.ks'
            'patterns': [
              {
                'match': '(?>\\\\\\s*\\n)'
                'name': 'punctuation.separator.continuation.ks'
              }
            ]
          }
        ]
      }
    ]
  'parens':
    'begin': '\\('
    'beginCaptures':
      '0':
        'name': 'punctuation.section.parens.begin.ks'
    'end': '\\)'
    'endCaptures':
      '0':
        'name': 'punctuation.section.parens.end.ks'
    'name': 'meta.parens.ks'
    'patterns': [
      {
        'include': '$base'
      }
    ]
  'string_escaped_char':
    'patterns': [
      {
        'match': '\\\\(\\\\|[abefnprtv\'"?]|[0-3]\\d{,2}|[4-7]\\d?|x[a-fA-F0-9]{,2}|u[a-fA-F0-9]{,4}|U[a-fA-F0-9]{,8})'
        'name': 'constant.character.escape.ks'
      }
      {
        'match': '\\\\.'
        'name': 'invalid.illegal.unknown-escape.ks'
      }
    ]
